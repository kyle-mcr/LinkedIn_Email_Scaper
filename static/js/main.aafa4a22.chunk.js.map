{"version":3,"sources":["components/Popup.jsx","App.js","index.js"],"names":["Popup","useState","generatedEmail","setGeneratedEmail","name","setName","company","setCompany","error","setError","loading","setLoading","mouseDown","e","currentTarget","style","backgroundColor","mouseUp","button","setTimeout","popupAlert","text","popup","document","createElement","classList","add","textDiv","textContent","appendChild","body","animate","opacity","removeChild","useEffect","window","chrome","runtime","onMessage","addListener","req","sender","sendResponse","message","Promise","resolve","setInfo","then","info","options","method","headers","JSON","stringify","fetch","res","a","json","data","catch","console","log","fetchEmail","tabs","query","currentWindow","active","activeTab","sendMessage","id","className","size","cursor","onClick","close","class","tempInput","display","value","select","execCommand","onMouseDown","onMouseUp","href","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.aafa4a22.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { VscClose } from 'react-icons/vsc';\nimport { BiCopyAlt } from 'react-icons/bi';\nimport { AiOutlineMail } from 'react-icons/ai';\n\nconst Popup = () => {\n  const [generatedEmail, setGeneratedEmail] = useState(),\n    [name, setName] = useState(),\n    [company, setCompany] = useState(),\n    [error, setError] = useState(),\n    [loading, setLoading] = useState(true);\n\n  const setInfo = (name, company) => {\n    return new Promise((resolve) => {\n      setName(name);\n      setCompany(company);\n      resolve({ name, company });\n    });\n  }\n\n  const fetchEmail = ({ name, company }) => {\n    const options = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ \n        name,\n        company\n      })\n    }\n    fetch('http://104.236.17.95:4000/generate', options)\n      .then(async res => {\n        if (!res) {\n          return null;\n        }\n        const data = await res.json();\n        if (!data) {\n          return null;\n        }\n        return data;\n      })\n      .then(data => {\n        if (data && data[0] && data[0] !== '') {\n          setGeneratedEmail(data[0]);\n        } else {\n          setError(\"We're sorry, we couldn't guess an email for this user.\");\n        }\n      })\n      .then(() => {\n        setLoading(false);\n      })\n      .catch(({ message }) => {\n        console.log(message);\n        setError(message);\n        setLoading(false);\n      })\n  }\n\n  const mouseDown = e => {\n    e.currentTarget.style.backgroundColor = 'lightgrey';\n  }\n\n  const mouseUp = e => {\n    const button = e.currentTarget;\n    setTimeout(() => {\n      button.style.backgroundColor = 'white';\n    }, 100)\n  }\n\n  const copyToClipboard = () => {\n    const tempInput = document.createElement('input');\n    tempInput.style.display = 'hidden';\n    document.body.appendChild(tempInput);\n    tempInput.value = generatedEmail;\n    tempInput.select();\n    document.execCommand('copy');\n    popupAlert('Email copied to clipboard')\n    document.body.removeChild(tempInput);\n  };\n\n  const popupAlert = text => {\n    const popup = document.createElement('div');\n    popup.classList.add('popup');\n    const textDiv = document.createElement('div');\n    textDiv.textContent = text;\n    popup.appendChild(textDiv);\n    document.body.appendChild(popup);\n    popup.animate([\n      { opacity: 0.2 },\n      { opacity: 1 }\n    ], 400)\n    setTimeout(() => {\n      popup.animate([\n        { opacity: 1 },\n        { opacity: 0.2 }\n      ], 400)\n    }, 2000);\n    setTimeout(() => {\n      document.body.removeChild(popup);\n    }, 2375)\n  }\n\n  useEffect(() => {\n    window.chrome.runtime.onMessage.addListener((req, sender, sendResponse) => {\n      if (req.message === 'info_response') {\n        if (req.error) {\n          setError(req.error);\n          setLoading(false);\n        } else {\n          setInfo(req.name, req.company)\n            .then(info => fetchEmail(info))\n        }\n      }\n    });\n\n    window.chrome.tabs.query({ currentWindow: true, active: true }, (tabs) => {\n      let activeTab = tabs[0];\n      window.chrome.tabs.sendMessage(activeTab.id, { \"message\": \"scrape\" });\n    });\n  }, []);\n\n  return (\n    <>\n      <div className='header'>\n        <h1>LinkedIn Email Finder</h1>\n        <VscClose \n          size={20} style={{ cursor: 'pointer' }}\n          onClick={() => window.close()} \n        />\n      </div>\n      <div className='main'>\n        { loading ? (\n          <div class=\"lds-default\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n        ) : error ? (\n          <div className='popup-text error'>{error}</div>\n        ) : name && company && generatedEmail ? (\n          <div className='results-content'>\n            <div className='popup-text'>\n              We predict that&nbsp; \n              <span className='name-text'>{name}</span>\n              's email, who works at&nbsp; \n              <span className='company-text'>{company}</span>\n              , is\n            </div>\n            <div className='email-content'>\n              <h2>{generatedEmail}</h2>\n                <div className='email-buttons'>\n                  <div onClick={copyToClipboard} onMouseDown={mouseDown} onMouseUp={mouseUp} >\n                    <BiCopyAlt size={25} />\n                  </div>\n                  <a href={`mailto:${generatedEmail}`} onMouseDown={mouseDown} onMouseUp={mouseUp}>\n                    <AiOutlineMail size={25} />\n                  </a>\n                </div>\n            </div>\n          </div>\n        ) : null}\n      </div>\n    </>\n  );\n};\n\nexport default Popup;","import Popup from './components/Popup';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Popup />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}